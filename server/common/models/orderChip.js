'use strict';

module.exports = function(OrderChip) {
    // Method below redundant, just use PATCH /orderChips/{id}
    // /*  OrderChip assignment
    // *   para: OrderInfoKey: the primary key generated by loopback instead of the OrderInfoId from shopify
    // *         workerId: the id property of worker instance
    // */
    // OrderChip.assignOrderInfo = function(orderId, workerId, cb){
    //     console.log(`Assigning order ${orderId} to worker ${workerId}`);
    //     OrderChip.findById(orderId)
    //     .then(order => {
    //         order.updateAttributes({workerId: workerId}, function(err, instance){
    //             if(err){
    //                 console.error(err);
    //                 cb(err);
    //             } else {
    //                 // console.log(instance);
    //                 cb(null, instance);
    //             }
    //         });
    //     })
    //     .catch(err => {
    //         console.error(err);
    //         cb(err);
    //     });
    // }

    // OrderChip.remoteMethod('assignOrderInfo', {
    //     description: 'Admin assign chip order to foundry worker.',
    //     accepts: [
    //         {arg: 'orderId', type: 'number', http: {source: 'form'}},
    //         {arg: 'workerId', type: 'number', http: {source: 'form'}}
    //     ],
    //     returns: {arg: 'orderChip', type: 'object'},
    //     http: {path: '/assignOrderChip', verb: 'post'}
    // });


};