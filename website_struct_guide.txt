Notes on how the project works

For how to get the project running, see the README.
Files in the project:

client/             # built on React
    dist/  
    node_modules/   # stores all the node modules  
    src/  
        api/
        component/
            footer/
                index.jsx #footer for the entire website
            layout/
            manage-layout/
            nav-left/
            nav-top/
        page/
            address/
                addNewAddress.jsx  # when user adds new address
                address.css
                addressList.jsx #renders multiple addressTemplates
                addressTemplate.jsx #renders each "address box", stores address info
                index.jsx #Displays the address list
                updateAddress.jsx #interface for updating an address
            changePass/
            files/
            fileUpload/ #folder containing files for the DXF/PDF mask upload
                fileinput/
                    css/
                    img/
                fileUpload.css
                index.jsx #the page for uploading files, c
            forgetPass/
            foundryWorker/
            home/
            login/
            manage/
            order/
            profile/
            project/
            register/
            shop/
            users/
        router/
            routeMap.jsx
        app.jsx
    static/  
        img/  
            images here...  
server/  
    client/  
    common/  
        models/  
    db/  
        seed-data/  
        toolbox/  
    node_modules/  
    server/  
        boot/  
        constants/  
        hooks/  
        routes/  
        toolbox/  
        views/  
        storage/  
            container1/  

How the frotn end communicates with backend:

Let's use changing/updating address as an example:
All files are in the folder client/src/component/page/address.

index.jsx has an Address class, which returns some HTML content, and then an AddressList object.

From addressList.jsx, it returns an array of AddressTemplates...

From addressTemplate.jsx, it has methods for updating an address and deleting an address. Thus, the buttons for updating and deleting an address are also here in the HTML it returns. Here, axios makes the requests to the backend via the API entry points.

ServerConfig.js is used to get the exact URL for those entry points. But where are they resolved on the servers side?

How are addNewAddress.jsx and updateAddress.jsx linked?

Uploading a file:
Loads page in client/src/component/page/fileUpload/index.jsx, which uses bootstrap-file-input to upload files. The React component/class here is called "Upload." When a file is uploaded, the following line of code executes:

$("#file1").fileinput({...}).on("fileuploaded", function(...){...});
The fileinput() method uploads the file, and the on() executes after the server responds that the file was uploaded. All other files in there are for css styles or "loading" gif images.

Ordering page (localhost:8086/shop):
Files located under client/src/component/page/shop/:
shop.jsx: The main file, renders a cart button on the right that if clicked, opens a sidebar with the cart, displaying currently ordered items. This propagates down to cart.jsx. If the "with cover plate assembled" is toggled, it updates the state of the Shop object.
Note: At this point, seems like it hasn't saved anything to the database??

Cart.jsx: contains multiple LineItem objects, each containing detail about an order. Has an "Open Checkout" button so that user can proceeed to the checkout page.

lineitem.jsx: contains react component for LineItem, of which multiple are created to make up the cart.

