{
  "name": "edroplets",
  "version": "4.0.0",
  "scripts": {
    "docker:build": "docker build -t edroplets_backend server/",
    "docker:buildmac": "docker build -t edroplets_backend server/ --platform linux/amd64",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "docker:stop": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml down",
    "docker:reset": "cross-env RESET_DATABASE=Yes docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:migrate": "cross-env MIGRATE_DATABASE=Yes docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:flush": "cross-env RESET_DATABASE=Yes MIGRATE_DATABASE=Yes docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "docker:restart": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml restart edroplets_backend",
    "docker:sql": "docker exec -it edrop_mysqldb mysql -u edrop -p",
    "docker:sqlroot": "docker exec -it edrop_mysqldb mysql -u root -p",
    "client:dev": "npm run dev --prefix client",
    "client:build": "npm run build --prefix client",
    "community:dev": "npm run dev --prefix community",
    "community:build": "npm run build --prefix community",
    "dev:all": "concurrently -n server,client,community \"npm run docker:dev\" \"npm run client:dev\" \"npm run community:dev\"",
    "dev:client": "concurrently -n server,client \"npm run docker:dev\" \"npm run client:dev\"",
    "dev:community": "concurrently -n server,community \"npm run docker:dev\" \"npm run community:dev\""
  },
  "devDependencies": {
    "concurrently": "^7.6.0",
    "cross-env": "^7.0.3"
  }
}
